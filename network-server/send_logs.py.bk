import syslog
import json
import time
import datetime
import os
import socket

def send_log(host, json_file):
    try:
        with open(json_file, 'r') as f:
            data = json.load(f)
    except FileNotFoundError:
        print(f"Error: JSON file '{json_file}' not found.")
        return
    except json.JSONDecodeError:
        print(f"Error: Invalid JSON format in '{json_file}'.")
        return

    for log_entry in data:
        try:
            if isinstance(log_entry.get('timestamp'), str):
                try:
                    log_entry['timestamp'] = datetime.datetime.fromisoformat(log_entry['timestamp']).isoformat()
                except ValueError:
                    print(f"Warning: Invalid timestamp format: {log_entry.get('timestamp')}. Using current time.")
                    log_entry['timestamp'] = datetime.datetime.now().isoformat()
            else:
                log_entry['timestamp'] = datetime.datetime.now().isoformat()
        except (ValueError, TypeError) as e:
            print(f"Timestamp Error: {e}")
            log_entry['timestamp'] = datetime.datetime.now().isoformat()
        try:
            log_message = json.dumps(log_entry)
            sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
            try:
                sock.sendto(log_message.encode(), (host, 514))
            except Exception as e:
                print(f"Error sending message via socket: {e}")
            finally:
                sock.close()
        except TypeError as e:
            print(f"JSON Encoding Error: {e}")
            print(f"Problematic log entry: {log_entry}")


if __name__ == "__main__":
    elk_host = "172.31.20.40"
    json_file = "syslogen_data/cisco_informational.json"

    while True:
        send_log(elk_host, json_file)
        time.sleep(1)
